/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SharecalendarImport } from './routes/sharecalendar'
import { Route as ProfileImport } from './routes/profile'
import { Route as NoticeImport } from './routes/notice'
import { Route as CommuteImport } from './routes/commute'
import { Route as AuthImport } from './routes/auth'
import { Route as AttendanceImport } from './routes/attendance'
import { Route as AdminnoticeImport } from './routes/adminnotice'
import { Route as AdminImport } from './routes/admin'
import { Route as ScheduleScheduleIdImport } from './routes/schedule.$scheduleId'

// Create Virtual Routes

const AboutLazyImport = createFileRoute('/about')()
const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const AboutLazyRoute = AboutLazyImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/about.lazy').then((d) => d.Route))

const SharecalendarRoute = SharecalendarImport.update({
  id: '/sharecalendar',
  path: '/sharecalendar',
  getParentRoute: () => rootRoute,
} as any)

const ProfileRoute = ProfileImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => rootRoute,
} as any)

const NoticeRoute = NoticeImport.update({
  id: '/notice',
  path: '/notice',
  getParentRoute: () => rootRoute,
} as any)

const CommuteRoute = CommuteImport.update({
  id: '/commute',
  path: '/commute',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRoute,
} as any)

const AttendanceRoute = AttendanceImport.update({
  id: '/attendance',
  path: '/attendance',
  getParentRoute: () => rootRoute,
} as any)

const AdminnoticeRoute = AdminnoticeImport.update({
  id: '/adminnotice',
  path: '/adminnotice',
  getParentRoute: () => rootRoute,
} as any)

const AdminRoute = AdminImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => rootRoute,
} as any)

const IndexLazyRoute = IndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const ScheduleScheduleIdRoute = ScheduleScheduleIdImport.update({
  id: '/schedule/$scheduleId',
  path: '/schedule/$scheduleId',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/admin': {
      id: '/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminImport
      parentRoute: typeof rootRoute
    }
    '/adminnotice': {
      id: '/adminnotice'
      path: '/adminnotice'
      fullPath: '/adminnotice'
      preLoaderRoute: typeof AdminnoticeImport
      parentRoute: typeof rootRoute
    }
    '/attendance': {
      id: '/attendance'
      path: '/attendance'
      fullPath: '/attendance'
      preLoaderRoute: typeof AttendanceImport
      parentRoute: typeof rootRoute
    }
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/commute': {
      id: '/commute'
      path: '/commute'
      fullPath: '/commute'
      preLoaderRoute: typeof CommuteImport
      parentRoute: typeof rootRoute
    }
    '/notice': {
      id: '/notice'
      path: '/notice'
      fullPath: '/notice'
      preLoaderRoute: typeof NoticeImport
      parentRoute: typeof rootRoute
    }
    '/profile': {
      id: '/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileImport
      parentRoute: typeof rootRoute
    }
    '/sharecalendar': {
      id: '/sharecalendar'
      path: '/sharecalendar'
      fullPath: '/sharecalendar'
      preLoaderRoute: typeof SharecalendarImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutLazyImport
      parentRoute: typeof rootRoute
    }
    '/schedule/$scheduleId': {
      id: '/schedule/$scheduleId'
      path: '/schedule/$scheduleId'
      fullPath: '/schedule/$scheduleId'
      preLoaderRoute: typeof ScheduleScheduleIdImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/admin': typeof AdminRoute
  '/adminnotice': typeof AdminnoticeRoute
  '/attendance': typeof AttendanceRoute
  '/auth': typeof AuthRoute
  '/commute': typeof CommuteRoute
  '/notice': typeof NoticeRoute
  '/profile': typeof ProfileRoute
  '/sharecalendar': typeof SharecalendarRoute
  '/about': typeof AboutLazyRoute
  '/schedule/$scheduleId': typeof ScheduleScheduleIdRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/admin': typeof AdminRoute
  '/adminnotice': typeof AdminnoticeRoute
  '/attendance': typeof AttendanceRoute
  '/auth': typeof AuthRoute
  '/commute': typeof CommuteRoute
  '/notice': typeof NoticeRoute
  '/profile': typeof ProfileRoute
  '/sharecalendar': typeof SharecalendarRoute
  '/about': typeof AboutLazyRoute
  '/schedule/$scheduleId': typeof ScheduleScheduleIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/admin': typeof AdminRoute
  '/adminnotice': typeof AdminnoticeRoute
  '/attendance': typeof AttendanceRoute
  '/auth': typeof AuthRoute
  '/commute': typeof CommuteRoute
  '/notice': typeof NoticeRoute
  '/profile': typeof ProfileRoute
  '/sharecalendar': typeof SharecalendarRoute
  '/about': typeof AboutLazyRoute
  '/schedule/$scheduleId': typeof ScheduleScheduleIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/admin'
    | '/adminnotice'
    | '/attendance'
    | '/auth'
    | '/commute'
    | '/notice'
    | '/profile'
    | '/sharecalendar'
    | '/about'
    | '/schedule/$scheduleId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/admin'
    | '/adminnotice'
    | '/attendance'
    | '/auth'
    | '/commute'
    | '/notice'
    | '/profile'
    | '/sharecalendar'
    | '/about'
    | '/schedule/$scheduleId'
  id:
    | '__root__'
    | '/'
    | '/admin'
    | '/adminnotice'
    | '/attendance'
    | '/auth'
    | '/commute'
    | '/notice'
    | '/profile'
    | '/sharecalendar'
    | '/about'
    | '/schedule/$scheduleId'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  AdminRoute: typeof AdminRoute
  AdminnoticeRoute: typeof AdminnoticeRoute
  AttendanceRoute: typeof AttendanceRoute
  AuthRoute: typeof AuthRoute
  CommuteRoute: typeof CommuteRoute
  NoticeRoute: typeof NoticeRoute
  ProfileRoute: typeof ProfileRoute
  SharecalendarRoute: typeof SharecalendarRoute
  AboutLazyRoute: typeof AboutLazyRoute
  ScheduleScheduleIdRoute: typeof ScheduleScheduleIdRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  AdminRoute: AdminRoute,
  AdminnoticeRoute: AdminnoticeRoute,
  AttendanceRoute: AttendanceRoute,
  AuthRoute: AuthRoute,
  CommuteRoute: CommuteRoute,
  NoticeRoute: NoticeRoute,
  ProfileRoute: ProfileRoute,
  SharecalendarRoute: SharecalendarRoute,
  AboutLazyRoute: AboutLazyRoute,
  ScheduleScheduleIdRoute: ScheduleScheduleIdRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/admin",
        "/adminnotice",
        "/attendance",
        "/auth",
        "/commute",
        "/notice",
        "/profile",
        "/sharecalendar",
        "/about",
        "/schedule/$scheduleId"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/admin": {
      "filePath": "admin.tsx"
    },
    "/adminnotice": {
      "filePath": "adminnotice.tsx"
    },
    "/attendance": {
      "filePath": "attendance.tsx"
    },
    "/auth": {
      "filePath": "auth.tsx"
    },
    "/commute": {
      "filePath": "commute.tsx"
    },
    "/notice": {
      "filePath": "notice.tsx"
    },
    "/profile": {
      "filePath": "profile.tsx"
    },
    "/sharecalendar": {
      "filePath": "sharecalendar.tsx"
    },
    "/about": {
      "filePath": "about.lazy.tsx"
    },
    "/schedule/$scheduleId": {
      "filePath": "schedule.$scheduleId.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
